//24ms 11.9M 暴力解法
class Solution(object):
    def __init__(self):
        self.nlist = []
    def isHappy(self, n):
        """
        :type n: int
        :rtype: bool
        """
        n = str(n)
        if n in self.nlist:
            return False
        else:
            self.nlist.append(n)
        nums = list(n)
        result = 0
        for num in nums:
            result+=int(num)**2
        if result==1:
            return True
        else:
            return self.isHappy(str(result))
 //16ms 11.7M 快慢指针解法
 class Solution(object):
    def isHappy(self, n):
        """
        :type n: int
        :rtype: bool
        """
        def calnum(n):
            result = 0
            while n:
                bit = n%10
                result+=bit**2
                n=n//10
            return result
        slow = calnum(n)
        fast = calnum(n)
        fast = calnum(fast)
        while(slow!=fast):
            slow = calnum(slow)
            fast = calnum(fast)
            fast = calnum(fast)
        else:
            if slow==1:
                return True
            else:
                return False
