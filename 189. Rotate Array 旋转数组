//16ms O(n) O(k)空间解法
void rotate(int* nums, int numsSize, int k){
    if(numsSize<k) k = k-numsSize*(k/numsSize);
    int *p = (int*)calloc(k,4);
    for(int i = numsSize-1;i>=numsSize-k;i--) p[i-numsSize+k] = nums[i];
    for(int i = numsSize-1;i>=k;i--) nums[i] = nums[i-k];
    for(int i = 0;i<k;i++)nums[i] = p[i];
    free(p);
}
// 12ms O(n) 时间O(1)空间
void rotate(int nums[], int n, int k) {
    for (int i = 0, j = k % n, previous = nums[i], anchor = i, count = n; count > 0; count--, j = (i + k) % n)  {
        int tmp = nums[j];
        nums[j] = previous;
        previous = tmp;
        if ((i = j) == anchor) {
            i = (i + 1) % n;
            previous = nums[i];
            anchor = i;
        }
    }
}
