// 1ms java
class Solution {
    class UF{
        int id[];
        public UF(int N){
            id = new int[N];
            for(int i = 0;i<N;i++)
                id[i] = i;
        }
        
        public void union(int a,int b){
            int p = find(a);
            int q = find(b);
            if(p==q)
                return;
            else if(a>b){
                id[q] = id[p];
            }
            else{
                id[p] = id[q];
            }
        }
        
        public int find(int p){
            int s = p;
            while(s!=id[s])
                s = id[s];
            while(id[p]!=s){
                p = id[p];
                id[p] = s;
            }
            return s;
        }
    }
    public boolean equationsPossible(String[] equations) {
        UF equal = new UF(26);
        for(String s:equations){
            if(s.charAt(1)=='='){
                int a = s.charAt(0)-97;
                int b = s.charAt(3)-97;
                equal.union(a,b);
            }
        }
        for(String s:equations){
            if(s.charAt(1)=='!'){
                int a = s.charAt(0)-97;
                int b = s.charAt(3)-97;
                if(equal.find(a)==equal.find(b))
                    return false;
            }  
        }
        return true;
    }
}
