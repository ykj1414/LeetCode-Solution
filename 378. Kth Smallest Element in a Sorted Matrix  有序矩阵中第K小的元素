//40ms 10.2M
void adjust(int *array,int s,int n){
    int temp=array[s];
    for(int i=2*s+1;i<n;i=2*i+1){
        if(i+1<n&&array[i]>array[i+1]) i++;
        if(temp<array[i]){break;}
        else{
            array[s]=array[i];
            s=i;
        }
    }
    array[s]=temp;
}
int kthSmallest(int** matrix, int matrixRowSize, int *matrixColSize, int k) {
    int n=matrixRowSize*(*matrixColSize);
    int *array=(int*)malloc(n*sizeof(int));
    int count=0;
    for(int i=0;i<matrixRowSize;i++){
        for(int j=0;j<*matrixColSize;j++){
             array[count++]=matrix[i][j];
        }
    }
    for(int i=n/2-1;i>=0;i--){
        adjust(array,i,n);
    }
    for(int j=n-1;j>n-k;j--){
        if(array[0]!=array[j]){
            array[0]=array[0]^array[j];
            array[j]=array[0]^array[j];
            array[0]=array[0]^array[j];
        }
        adjust(array,0,j);
    }
    return array[0];
}
