int compare(const void*a,const void*b){
    int l = *(int*)a;
    int r = *(int*)b;
    return l-r;
}

int threeSumClosest(int* nums, int numsSize, int target) {
    // int nums[] = {0,2,1,-3};
    // int target = 1;
    // int numsSize = 4;
    int result = nums[0]+nums[1]+nums[numsSize-1]-target;
    qsort(nums,numsSize,sizeof(nums[0]),compare);
    for(int i = 0;i<numsSize-2;i++){
        for(int k = i+1,j = numsSize-1;k!=j;){
            if(nums[i]+nums[k]+nums[j]>target){
                int cur = nums[i]+nums[k]+nums[j] - target;
                int judge = result>=target?result-target:target-result;
                result = judge>=cur?nums[i]+nums[k]+nums[j]:result;
                --j;
            }
            else if(nums[i]+nums[k]+nums[j]==target)
               return target;
            else if(nums[i]+nums[k]+nums[j]<target){
                int cur = target - nums[i]-nums[k]-nums[j];
                int judge = result>=target?result-target:target-result;
                result = judge>=cur?nums[i]+nums[k]+nums[j]:result;
                ++k;
            }
        }
    }
    return result;
}
