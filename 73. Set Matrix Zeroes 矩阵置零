//我的解法：36ms 12.3MB解法
void setZeroes(int** matrix, int matrixSize, int* matrixColSize){
    bool zero[1000] = {0};
    for(int i = 0;i<matrixSize;i++){
        for(int j = 0;j<*matrixColSize;j++){
            if(matrix[i][j]==0) {
                zero[i]=1;
                zero[matrixSize+j] = 1;
            }
        }
    }
    for(int i = 0;i<matrixSize;i++){
        if(zero[i]==1){
            for(int j = 0;j<*matrixColSize;j++) matrix[i][j]=0;
        }
    }
    for(int i = matrixSize;i<matrixSize+*matrixColSize;i++){
        if(zero[i]==1){
            for(int j = 0;j<matrixSize;j++) matrix[j][i-matrixSize] = 0;
        }
    }
}

//符合题目要求的解法 56ms
void setZeroes(int** matrix, int matrixRowSize, int *matrixColSize) {
    if (!matrix || (matrixRowSize <= 0) || (matrixColSize<= 0)) return;
    const int NCOLS = *matrixColSize;
    int i, j, m, n, row_0_zero = 0, row_zero;
    for (i = 0; i < matrixRowSize; i++) {
        row_zero = 0;
        for (j = 0; j < NCOLS; j++) {
            if (matrix[i][j] == 0) {
                matrix[0][j] = 0;
                if (i == 0) {
                    if (!row_0_zero) row_0_zero = 1;
                } else {
                    if (!row_zero) row_zero = 1;
                }
            }
        }
        if (row_zero) {
            for (n = 0; n < NCOLS; n++) if (matrix[i][n]) matrix[i][n] = 0;
        }
    }
    for (j = 0; j < NCOLS; j++) {
        if (matrix[0][j] == 0) {
            for (m = 1; m < matrixRowSize; m++) if (matrix[m][j]) matrix[m][j] = 0;
        }
    }
    if (row_0_zero) {
        for (n = 0; n < NCOLS; n++) if (matrix[0][n]) matrix[0][n] = 0;
    }
}
