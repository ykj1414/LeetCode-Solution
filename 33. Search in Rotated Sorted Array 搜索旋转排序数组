int findNextPosition(int *nums,int position,int nS,int target){
    //printf("%d\n",*(nums+position));
    if(position>=nS) return -1;
    if((*nums+position)>target) return -1;
    if(*(nums+position)==target) return position;
    else if(*(nums+position-1)>*(nums+position)) return -1;
    else return findNextPosition(nums,++position,nS,target);
}

int findPrePosition(int *nums,int position,int nS,int target){
    //printf("%d\n",*(nums+position));
    if(position<=0) return -1;
    if((*nums+position)<target) return -1;
    if(*(nums+position)==target) return position;
    else if(*(nums+position-1)>*(nums+position)) return -1;
    else return findPrePosition(nums,--position,nS,target);
}

int search(int* nums, int nS, int target) {
    if(nS<1) return -1;
    if(nS==1&&*nums!=target) return -1; 
    if(*nums==target) return 0;
    else if(*(nums+nS-1)==target) return nS-1;
    else if(*nums>target) return findPrePosition(nums,nS-2,nS,target);
    else return findNextPosition(nums,1,nS,target);
}
